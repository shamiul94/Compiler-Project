At line no: 1 : type_specifier	: INT

At line no: 1 : declaration_list : ID

x

At line no: 1 : declaration_list : declaration_list COMMA ID

y

ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> 
3 --> 
4 --> 
5 --> 
6 --> 
7 --> 
8 --> 
9 --> 
10 --> 
At line no: 1 : declaration_list : declaration_list COMMA ID

z

ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> 
3 --> 
4 --> 
5 --> 
6 --> 
7 --> 
8 --> 
9 --> 
10 --> < z,ID,INT,VAR, >
At line no: 1 : var_declaration : type_specifier declaration_list SEMICOLON

At line no: 1 : unit : var_declaration

At line no: 1 : program : unit

At line no: 1 : type_specifier	: FLOAT

At line no: 1 : declaration_list : ID

a

At line no: 1 : var_declaration : type_specifier declaration_list SEMICOLON

At line no: 1 : unit : var_declaration

At line no: 1 : program : program unit

At line no: 3 : type_specifier	: INT

At line no: 3 : type_specifier	: INT

At line no: 3 : parameter_list  : type_specifier ID

At line no: 3 : type_specifier	: INT

At line no: 3 : parameter_list  : parameter_list COMMA type_specifier

At line no: 3 : type_specifier	: INT

At line no: 3 : parameter_list  : parameter_list COMMA type_specifier ID

INT

At line no: 3 : func_declaration : type_specifier ID LPAREN parameter_list RPAREN SEMICOLON


loo

At line no: 3 : unit : func_declaration

At line no: 3 : program : program unit

At line no: 5 : type_specifier	: INT

At line no: 5 : type_specifier	: INT

At line no: 5 : parameter_list  : type_specifier ID

At line no: 7 : factor	: CONST_INT 

0

At line no: 7 : unary_expression : NOT unary_expression

At line no: 7 : term :	unary_expression

At line no: 7 : simple_expression : term

At line no: 7 : rel_expression	: simple_expression

At line no: 7 : logic_expression : rel_expression

At line no: 7 : expression : logic_expression

At line no: 7 : statement : RETURN expression SEMICOLON

At line no: 7 : statements : statement

ScopeTable # 2
0 --> 
1 --> 
2 --> 
3 --> 
4 --> 
5 --> 
6 --> 
7 --> 
8 --> < a,ID,INT,VAR, >
9 --> 
10 --> 
ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> < loo,ID,,FUNC,INT >
3 --> 
4 --> 
5 --> 
6 --> 
7 --> 
8 --> < a,ID,FLOAT,VAR, >
9 --> 
10 --> < z,ID,INT,VAR, >
At line no: 8 : compound_statement : LCURL statements RCURL

Scope exited
At line no: 8 : func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

loo

At line no: 8 : unit : func_definition

At line no: 8 : program : program unit

At line no: 11 : type_specifier	: VOID

At line no: 11 : func_declaration : type_specifier ID LPAREN RPAREN SEMICOLON

VOID
foo

At line no: 11 : unit : func_declaration

At line no: 11 : program : program unit

At line no: 12 : type_specifier	: INT

At line no: 12 : func_declaration : type_specifier ID LPAREN RPAREN SEMICOLON

INT
foo

At line no: 12 : unit : func_declaration

At line no: 12 : program : program unit

At line no: 14 : type_specifier	: INT

At line no: 14 : type_specifier	: INT

At line no: 14 : parameter_list  : type_specifier ID

At line no: 15 : variable : ID

a

At line no: 15 : factor	: variable 

At line no: 15 : unary_expression : NOT unary_expression

At line no: 15 : term :	unary_expression

At line no: 15 : simple_expression : term

At line no: 15 : variable : ID

b

At line no: 15 : factor	: variable 

At line no: 15 : unary_expression : NOT unary_expression

At line no: 15 : term :	unary_expression

At line no: 15 : simple_expression : simple_expression ADDOP term

At line no: 15 : rel_expression	: simple_expression

At line no: 15 : logic_expression : rel_expression

At line no: 15 : expression : logic_expression

At line no: 15 : statement : RETURN expression SEMICOLON

At line no: 15 : statements : statement

ScopeTable # 2
0 --> 
1 --> 
2 --> 
3 --> 
4 --> 
5 --> 
6 --> 
7 --> 
8 --> < a,ID,INT,VAR, >
9 --> 
10 --> 
ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> < loo,ID,,FUNC,INT >
3 --> < foo,ID,,FUNC,VOID >
4 --> 
5 --> 
6 --> 
7 --> 
8 --> < a,ID,FLOAT,VAR, >
9 --> 
10 --> < z,ID,INT,VAR, >
At line no: 16 : compound_statement : LCURL statements RCURL

Scope exited
At line no: 16 : func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

var

At line no: 16 : unit : func_definition

At line no: 16 : program : program unit

At line no: 18 : type_specifier	: INT

At line no: 18 : type_specifier	: INT

At line no: 18 : parameter_list  : type_specifier ID

At line no: 19 : variable : ID

x

At line no: 19 : factor	: CONST_INT 

2

At line no: 19 : unary_expression : NOT unary_expression

At line no: 19 : term :	unary_expression

At line no: 19 : simple_expression : term

At line no: 19 : rel_expression	: simple_expression

At line no: 19 : logic_expression : rel_expression

At line no: 19 : expression : variable ASSIGNOP logic_expression

At line no: 19 : expression_statement 	: expression SEMICOLON

At line no: 19 : statement : expression_statement

At line no: 19 : statements : statement

At line no: 20 : variable : ID

y

At line no: 20 : variable : ID

x

At line no: 20 : factor	: variable 

At line no: 20 : unary_expression : NOT unary_expression

At line no: 20 : term :	unary_expression

At line no: 20 : simple_expression : term

At line no: 20 : factor	: CONST_INT 

5

At line no: 20 : unary_expression : NOT unary_expression

At line no: 20 : term :	unary_expression

At line no: 20 : simple_expression : simple_expression ADDOP term

At line no: 20 : rel_expression	: simple_expression

At line no: 20 : logic_expression : rel_expression

At line no: 20 : expression : variable ASSIGNOP logic_expression

At line no: 20 : expression_statement 	: expression SEMICOLON

At line no: 20 : statement : expression_statement

At line no: 20 : statements : statements statement

ScopeTable # 2
0 --> 
1 --> 
2 --> 
3 --> 
4 --> 
5 --> 
6 --> 
7 --> < b,ID,INT,VAR, >
8 --> 
9 --> 
10 --> 
ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> < loo,ID,,FUNC,INT >
3 --> < foo,ID,,FUNC,VOID >
4 --> 
5 --> < var,ID,,FUNC,INT >
6 --> 
7 --> 
8 --> < a,ID,FLOAT,VAR, >
9 --> 
10 --> < z,ID,INT,VAR, >
At line no: 21 : compound_statement : LCURL statements RCURL

Scope exited
At line no: 21 : func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

foo

At line no: 21 : unit : func_definition

At line no: 21 : program : program unit

At line no: 23 : type_specifier	: INT

At line no: 24 : type_specifier	: INT

At line no: 24 : declaration_list : ID LTHIRD CONST_INT RTHIRD

a
2

At line no: 24 : declaration_list : declaration_list COMMA ID

c

ScopeTable # 2
0 --> 
1 --> 
2 --> 
3 --> 
4 --> 
5 --> 
6 --> < c,ID,INT,VAR, >
7 --> 
8 --> < a,ID,INT,ARR, >
9 --> 
10 --> 
ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> < loo,ID,,FUNC,INT >
3 --> < foo,ID,,FUNC,VOID >
4 --> 
5 --> < var,ID,,FUNC,INT >
6 --> 
7 --> 
8 --> < a,ID,FLOAT,VAR, >
9 --> 
10 --> < z,ID,INT,VAR, >
At line no: 24 : declaration_list : declaration_list COMMA ID

i

ScopeTable # 2
0 --> 
1 --> 
2 --> 
3 --> 
4 --> 
5 --> < i,ID,INT,VAR, >
6 --> < c,ID,INT,VAR, >
7 --> 
8 --> < a,ID,INT,ARR, >
9 --> 
10 --> 
ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> < loo,ID,,FUNC,INT >
3 --> < foo,ID,,FUNC,VOID >
4 --> 
5 --> < var,ID,,FUNC,INT >
6 --> 
7 --> 
8 --> < a,ID,FLOAT,VAR, >
9 --> 
10 --> < z,ID,INT,VAR, >
At line no: 24 : declaration_list : declaration_list COMMA ID

j

ScopeTable # 2
0 --> 
1 --> 
2 --> 
3 --> 
4 --> < j,ID,INT,VAR, >
5 --> < i,ID,INT,VAR, >
6 --> < c,ID,INT,VAR, >
7 --> 
8 --> < a,ID,INT,ARR, >
9 --> 
10 --> 
ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> < loo,ID,,FUNC,INT >
3 --> < foo,ID,,FUNC,VOID >
4 --> 
5 --> < var,ID,,FUNC,INT >
6 --> 
7 --> 
8 --> < a,ID,FLOAT,VAR, >
9 --> 
10 --> < z,ID,INT,VAR, >
At line no: 24 : var_declaration : type_specifier declaration_list SEMICOLON

At line no: 24 : statement : var_declaration

At line no: 24 : statements : statement

At line no: 24 : type_specifier	: FLOAT

At line no: 24 : declaration_list : ID

d

At line no: 24 : var_declaration : type_specifier declaration_list SEMICOLON

At line no: 24 : statement : var_declaration

At line no: 24 : statements : statements statement

At line no: 25 : factor	: CONST_INT 

3

At line no: 25 : unary_expression : NOT unary_expression

At line no: 25 : term :	unary_expression

At line no: 25 : simple_expression : term

At line no: 25 : rel_expression	: simple_expression

At line no: 25 : logic_expression : rel_expression

At line no: 25 : expression : logic_expression

At line no: 25 : variable : ID LTHIRD expression RTHIRD

i

At line no: 25 : factor	: CONST_INT 

4

At line no: 25 : unary_expression : NOT unary_expression

At line no: 25 : term :	unary_expression

At line no: 25 : simple_expression : term

At line no: 25 : rel_expression	: simple_expression

At line no: 25 : logic_expression : rel_expression

At line no: 25 : expression : variable ASSIGNOP logic_expression

At line no: 25 : expression_statement 	: expression SEMICOLON

At line no: 25 : statement : expression_statement

At line no: 25 : statements : statements statement

At line no: 26 : factor	: CONST_INT 

5

At line no: 26 : unary_expression : NOT unary_expression

At line no: 26 : term :	unary_expression

At line no: 26 : simple_expression : term

At line no: 26 : rel_expression	: simple_expression

At line no: 26 : logic_expression : rel_expression

At line no: 26 : expression : logic_expression

At line no: 26 : variable : ID LTHIRD expression RTHIRD

a

At line no: 26 : factor	: CONST_INT 

5

At line no: 26 : unary_expression : NOT unary_expression

At line no: 26 : term :	unary_expression

At line no: 26 : simple_expression : term

At line no: 26 : rel_expression	: simple_expression

At line no: 26 : logic_expression : rel_expression

At line no: 26 : expression : variable ASSIGNOP logic_expression

At line no: 26 : expression_statement 	: expression SEMICOLON

At line no: 26 : statement : expression_statement

At line no: 26 : statements : statements statement

At line no: 27 : factor	: CONST_INT 

0

At line no: 27 : unary_expression : NOT unary_expression

At line no: 27 : term :	unary_expression

At line no: 27 : simple_expression : term

At line no: 27 : rel_expression	: simple_expression

At line no: 27 : logic_expression : rel_expression

At line no: 27 : expression : logic_expression

At line no: 27 : variable : ID LTHIRD expression RTHIRD

a

At line no: 27 : factor	: CONST_INT 

1

At line no: 27 : unary_expression : NOT unary_expression

At line no: 27 : term :	unary_expression

At line no: 27 : simple_expression : term

At line no: 27 : rel_expression	: simple_expression

At line no: 27 : logic_expression : rel_expression

At line no: 27 : expression : variable ASSIGNOP logic_expression

At line no: 27 : expression_statement 	: expression SEMICOLON

At line no: 27 : statement : expression_statement

At line no: 27 : statements : statements statement

At line no: 28 : factor	: CONST_INT 

1

At line no: 28 : unary_expression : NOT unary_expression

At line no: 28 : term :	unary_expression

At line no: 28 : simple_expression : term

At line no: 28 : rel_expression	: simple_expression

At line no: 28 : logic_expression : rel_expression

At line no: 28 : expression : logic_expression

At line no: 28 : variable : ID LTHIRD expression RTHIRD

a

At line no: 28 : factor	: CONST_INT 

5

At line no: 28 : unary_expression : NOT unary_expression

At line no: 28 : term :	unary_expression

At line no: 28 : simple_expression : term

At line no: 28 : rel_expression	: simple_expression

At line no: 28 : logic_expression : rel_expression

At line no: 28 : expression : variable ASSIGNOP logic_expression

At line no: 28 : expression_statement 	: expression SEMICOLON

At line no: 28 : statement : expression_statement

At line no: 28 : statements : statements statement

At line no: 29 : variable : ID

i

At line no: 29 : factor	: CONST_FLOAT 

0.5

At line no: 29 : unary_expression : NOT unary_expression

At line no: 29 : term :	unary_expression

At line no: 29 : simple_expression : term

At line no: 29 : rel_expression	: simple_expression

At line no: 29 : logic_expression : rel_expression

At line no: 29 : expression : logic_expression

At line no: 29 : variable : ID LTHIRD expression RTHIRD

a

At line no: 29 : factor	: variable 

At line no: 29 : unary_expression : NOT unary_expression

At line no: 29 : term :	unary_expression

At line no: 29 : simple_expression : term

At line no: 29 : factor	: CONST_INT 

1

At line no: 29 : unary_expression : NOT unary_expression

At line no: 29 : term :	unary_expression

At line no: 29 : simple_expression : term

At line no: 29 : rel_expression	: simple_expression

At line no: 29 : logic_expression : rel_expression

At line no: 29 : expression : logic_expression

At line no: 29 : variable : ID LTHIRD expression RTHIRD

a

At line no: 29 : factor	: variable 

At line no: 29 : unary_expression : NOT unary_expression

At line no: 29 : term :	unary_expression

At line no: 29 : simple_expression : simple_expression ADDOP term

At line no: 29 : rel_expression	: simple_expression

At line no: 29 : logic_expression : rel_expression

At line no: 29 : expression : variable ASSIGNOP logic_expression

At line no: 29 : expression_statement 	: expression SEMICOLON

At line no: 29 : statement : expression_statement

At line no: 29 : statements : statements statement

At line no: 30 : variable : ID

c

At line no: 30 : factor	: CONST_INT 

2

At line no: 30 : unary_expression : NOT unary_expression

At line no: 30 : term :	unary_expression

At line no: 30 : factor	: CONST_FLOAT 

3.5

At line no: 30 : unary_expression : NOT unary_expression

At line no: 30 : term :	term MULOP unary_expression

At line no: 30 : simple_expression : term

At line no: 30 : factor	: CONST_INT 

4

At line no: 30 : unary_expression : NOT unary_expression

At line no: 30 : term :	unary_expression

At line no: 30 : factor	: CONST_INT 

5

At line no: 30 : unary_expression : NOT unary_expression

At line no: 30 : term :	term MULOP unary_expression

At line no: 30 : simple_expression : term

At line no: 30 : rel_expression	: simple_expression

At line no: 30 : logic_expression : rel_expression

At line no: 30 : expression : logic_expression

At line no: 30 : factor	: LPAREN expression RPAREN 

At line no: 30 : unary_expression : NOT unary_expression

At line no: 30 : term :	unary_expression

At line no: 30 : simple_expression : term

At line no: 30 : rel_expression	: simple_expression

At line no: 30 : factor	: CONST_INT 

2

At line no: 30 : unary_expression : NOT unary_expression

At line no: 30 : term :	unary_expression

At line no: 30 : simple_expression : term

At line no: 30 : rel_expression	: simple_expression

At line no: 30 : logic_expression : rel_expression LOGICOP rel_expression

At line no: 30 : expression : logic_expression

At line no: 30 : factor	: LPAREN expression RPAREN 

At line no: 30 : unary_expression : NOT unary_expression

At line no: 30 : term :	unary_expression

At line no: 30 : simple_expression : simple_expression ADDOP term

At line no: 30 : rel_expression	: simple_expression

At line no: 30 : logic_expression : rel_expression

At line no: 30 : expression : variable ASSIGNOP logic_expression

At line no: 30 : expression_statement 	: expression SEMICOLON

At line no: 30 : statement : expression_statement

At line no: 30 : statements : statements statement

At line no: 31 : variable : ID

j

At line no: 31 : factor	: CONST_INT 

2

At line no: 31 : unary_expression : NOT unary_expression

At line no: 31 : term :	unary_expression

At line no: 31 : factor	: CONST_FLOAT 

3.5

At line no: 31 : unary_expression : NOT unary_expression

At line no: 31 : term :	term MULOP unary_expression

At line no: 31 : simple_expression : term

At line no: 31 : factor	: CONST_INT 

5

At line no: 31 : unary_expression : NOT unary_expression

At line no: 31 : term :	unary_expression

At line no: 31 : factor	: CONST_FLOAT 

3.5

At line no: 31 : unary_expression : NOT unary_expression

At line no: 31 : term :	term MULOP unary_expression

At line no: 31 : simple_expression : term

At line no: 31 : factor	: CONST_INT 

4

At line no: 31 : unary_expression : NOT unary_expression

At line no: 31 : term :	unary_expression

At line no: 31 : simple_expression : term

At line no: 31 : rel_expression	: simple_expression RELOP simple_expression

At line no: 31 : factor	: CONST_INT 

8

At line no: 31 : unary_expression : NOT unary_expression

At line no: 31 : term :	unary_expression

At line no: 31 : simple_expression : term

At line no: 31 : rel_expression	: simple_expression

At line no: 31 : logic_expression : rel_expression LOGICOP rel_expression

At line no: 31 : expression : logic_expression

At line no: 31 : factor	: LPAREN expression RPAREN 

At line no: 31 : unary_expression : NOT unary_expression

At line no: 31 : term :	unary_expression

At line no: 31 : simple_expression : simple_expression ADDOP term

At line no: 31 : rel_expression	: simple_expression

At line no: 31 : factor	: CONST_INT 

2

At line no: 31 : unary_expression : NOT unary_expression

At line no: 31 : term :	unary_expression

At line no: 31 : simple_expression : term

At line no: 31 : rel_expression	: simple_expression

At line no: 31 : logic_expression : rel_expression LOGICOP rel_expression

At line no: 31 : expression : variable ASSIGNOP logic_expression

At line no: 31 : expression_statement 	: expression SEMICOLON

At line no: 31 : statement : expression_statement

At line no: 31 : statements : statements statement

At line no: 32 : variable : ID

d

At line no: 32 : factor	: CONST_INT 

1

At line no: 32 : unary_expression : NOT unary_expression

At line no: 32 : term :	unary_expression

At line no: 32 : simple_expression : term

At line no: 32 : rel_expression	: simple_expression

At line no: 32 : logic_expression : rel_expression

At line no: 32 : arguments : logic_expression

At line no: 32 : factor	: CONST_INT 

2

At line no: 32 : unary_expression : NOT unary_expression

At line no: 32 : term :	unary_expression

At line no: 32 : factor	: CONST_INT 

4

At line no: 32 : unary_expression : NOT unary_expression

At line no: 32 : term :	term MULOP unary_expression

At line no: 32 : simple_expression : term

At line no: 32 : rel_expression	: simple_expression

At line no: 32 : logic_expression : rel_expression

At line no: 32 : arguments : arguments COMMA logic_expression 

At line no: 32 : argument_list : arguments

At line no: 32 : factor	: ID LPAREN argument_list RPAREN  

var

At line no: 32 : unary_expression : NOT unary_expression

At line no: 32 : term :	unary_expression

At line no: 32 : simple_expression : term

At line no: 32 : factor	: CONST_FLOAT 

3.5

At line no: 32 : unary_expression : NOT unary_expression

At line no: 32 : term :	unary_expression

At line no: 32 : factor	: CONST_INT 

2

At line no: 32 : unary_expression : NOT unary_expression

At line no: 32 : term :	term MULOP unary_expression

At line no: 32 : simple_expression : simple_expression ADDOP term

At line no: 32 : rel_expression	: simple_expression

At line no: 32 : logic_expression : rel_expression

At line no: 32 : expression : variable ASSIGNOP logic_expression

At line no: 32 : expression_statement 	: expression SEMICOLON

At line no: 32 : statement : expression_statement

At line no: 32 : statements : statements statement

At line no: 33 : factor	: CONST_INT 

0

At line no: 33 : unary_expression : NOT unary_expression

At line no: 33 : term :	unary_expression

At line no: 33 : simple_expression : term

At line no: 33 : rel_expression	: simple_expression

At line no: 33 : logic_expression : rel_expression

At line no: 33 : expression : logic_expression

At line no: 33 : statement : RETURN expression SEMICOLON

At line no: 33 : statements : statements statement

ScopeTable # 2
0 --> 
1 --> 
2 --> < d,ID,FLOAT,VAR, >
3 --> 
4 --> < j,ID,INT,VAR, >
5 --> < i,ID,INT,VAR, >
6 --> < c,ID,INT,VAR, >
7 --> 
8 --> < a,ID,INT,ARR, >
9 --> 
10 --> 
ScopeTable # 1
0 --> < y,ID,INT,VAR, >
1 --> < x,ID,INT,VAR, >
2 --> < loo,ID,,FUNC,INT >
3 --> < foo,ID,,FUNC,VOID >
4 --> 
5 --> < var,ID,,FUNC,INT >
6 --> 
7 --> 
8 --> < a,ID,FLOAT,VAR, >
9 --> 
10 --> < z,ID,INT,VAR, >
At line no: 34 : compound_statement : LCURL statements RCURL

Scope exited
At line no: 34 : func_definition : type_specifier ID LPAREN RPAREN compound_statement

main

At line no: 34 : unit : func_definition

At line no: 34 : program : program unit

At line no: 34 : start : program

